{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/main.js","js/apply-filter.js","js/filters.js"],"names":["$","el","document","querySelectorAll","image","require","button","addEventListener","e","preventDefault","inputs","Array","prototype","slice","call","checked","filter","item","value","filters","source","getElementById","canvas","init","getContext","log","innerHTML","width","clientWidth","height","clientHeight","tempContext","drawImage","len","canvasData","getImageData","data","putImageData","saveFile","dataURL","toDataURL","link","href","download","exports","noise","Math","random","clamp","component","max","min","colorDistance","scale","dest","src","processBW","binaryData","l","i","r","g","b","luminance","processSepia"],"mappings":"AAAA;AEAA,YAEA,IAAImB,SAAUd,QAAQ,gBAClBe,OAASlB,SAASmB,eAAe,UACjCC,OAASpB,SAASmB,eAAe,UAEjCE,KAAO,SAASP,GAEnB,IAAKM,OAAOE,WAEX,YADAC,IAAIC,UAAY,mEAMjBJ,QAAOK,MAAQP,OAAOQ,YACtBN,OAAOO,OAAST,OAAOU,YAEvB,IAAIC,GAAcT,OAAOE,WAAW,KACpCO,GAAYC,UAAUZ,OAAQ,EAAG,EAAGE,OAAOK,MAAOL,OAAOO,OAEzD,IAAII,GAAMX,OAAOK,MAAQL,OAAOO,OAAS,EACrCK,EAAaH,EAAYI,aAAa,EAAG,EAAGb,OAAOK,MAAOL,OAAOO,QACjEb,EAAqB,UAAXA,EAAsB,eAAiB,WAErDG,SAAQH,GAAQkB,EAAWE,KAAMH,GAEjCF,EAAYM,aAAaH,EAAY,EAAG,GAKxCI,SAAStB,IAGNsB,SAAW,SAAStB,GACvB,GAAIuB,GAAUjB,OAAOkB,YACjBC,EAAOvC,SAASmB,eAAe,WAEnCoB,GAAKC,KAAOH,EACZE,EAAKE,SAAW3B,EAAS,OAG1B4B,SAAQ5B,OAASO;;AC3CjB,YAEA,SAASsB,SAER,MAAuB,GAAhBC,KAAKC,SAAiB,GAG9B,QAASC,OAAMC,GACd,MAAOH,MAAKI,IAAIJ,KAAKK,IAAI,IAAKF,GAAY,GAG3C,QAASG,eAAcC,EAAOC,EAAMC,GAGnC,MAAOP,OAAMK,EAAQC,GAAQ,EAAID,GAASE,GAG3C,QAASC,WAAUC,EAAYC,GAC9B,IAAK,GAAIC,GAAI,EAAOD,EAAJC,EAAOA,GAAK,EAAG,CAC9B,GAAIC,GAAIH,EAAWE,GACfE,EAAIJ,EAAWE,EAAI,GACnBG,EAAIL,EAAWE,EAAI,GACnBI,EAAgB,IAAJH,EAAe,IAAJC,EAAe,IAAJC,CACtCL,GAAWE,GAAKI,EAChBN,EAAWE,EAAI,GAAKI,EACpBN,EAAWE,EAAI,GAAKI,GAItB,QAASC,cAAaP,EAAYC,GACjC,IAAK,GAAIC,GAAI,EAAOD,EAAJC,EAAOA,GAAK,EAAG,CAC9B,GAAIC,GAAIH,EAAWE,GACfE,EAAIJ,EAAWE,EAAI,GACnBG,EAAIL,EAAWE,EAAI,EAEvBF,GAAWE,GAAKP,cAAcP,QAAc,KAAJe,EAAkB,KAAJC,EAAkB,KAAJC,EAAYF,GAChFH,EAAWE,EAAI,GAAKP,cAAcP,QAAc,KAAJe,EAAkB,KAAJC,EAAkB,KAAJC,EAAYD,GACpFJ,EAAWE,EAAI,GAAKP,cAAcP,QAAc,KAAJe,EAAkB,KAAJC,EAAkB,KAAJC,EAAYA,IAItFlB,QAAQY,UAAYA,UACpBZ,QAAQoB,aAAeA;;CF1CvB,WACC,YAEA,IAAIhE,GAAI,SAASC,GAAK,MAAOC,UAASC,iBAAiBF,IACnDG,EAAQC,QAAQ,qBAChBC,EAASN,EAAE,gBAAgB,EAE/BM,GAAOC,iBAAiB,QAAS,SAASC,GACzCA,EAAEC,gBAEF,IAAIC,GAASC,MAAMC,UAAUC,MAAMC,KAAKd,EAAE,UACtCe,EAAUL,EAAOM,OAAO,SAASC,GACpC,MAAOA,GAAKF,SAGbX,GAAMY,OAAOD,EAAQ,GAAGG","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\n\t'use strict';\n\t\n\tvar $ = function(el){ return document.querySelectorAll(el); }\n\tvar image = require('./apply-filter.js');\n\tvar button = $('#applyfilter')[0];\n\n\tbutton.addEventListener('click', function(e){\n\t\te.preventDefault();\n\n\t\tvar inputs = Array.prototype.slice.call($('input'));\n\t\tvar checked = inputs.filter(function(item){\n\t\t\treturn item.checked;\n\t\t});\n\n\t\timage.filter(checked[0].value);\n\t});\n\n})();\n","'use strict';\n\nvar filters = require('./filters.js');\nvar source = document.getElementById('source');\nvar canvas = document.getElementById('target');\n\nvar init = function(filter){\n\t\n\tif (!canvas.getContext) {\n\t\tlog.innerHTML = 'Canvas not supported. Please install a HTML5 compatible browser.';\n\t\treturn;\n\t}\n\n\t//var start = new Date();\n\n\tcanvas.width = source.clientWidth;\n\tcanvas.height = source.clientHeight;\n\n\tvar tempContext = canvas.getContext('2d');\n\ttempContext.drawImage(source, 0, 0, canvas.width, canvas.height); // copy image into canvas\n\t\n\tvar len = canvas.width * canvas.height * 4; // number items in binaryData array: 4x canvas pixels \n\tvar canvasData = tempContext.getImageData(0, 0, canvas.width, canvas.height);\n\tvar filter = (filter === 'sepia') ? 'processSepia' : 'processBW'; // choose filter\n\n\tfilters[filter](canvasData.data, len); // convert canvas binary data by applying filter\n\n\ttempContext.putImageData(canvasData, 0, 0); // put converted binary data into canvas\n\n\t//var diff = new Date() - start;\n\t//log.innerHTML = 'Process done in ' + diff + ' ms';\n\n\tsaveFile(filter);\n}\n\nvar saveFile = function(filter){\n\tvar dataURL = canvas.toDataURL(); // save canvas image as data url\n\tvar link = document.getElementById('download');\n\n\tlink.href = dataURL; // set link href to save as png\n\tlink.download = filter + '.png'; // set download filename\n}\n\nexports.filter = init;","ï»¿'use strict';\r\n\r\nfunction noise() {\r\n\t//Returns a value between 0.5 and 1\r\n\treturn Math.random() * 0.5 + 0.5;\r\n};\r\n\r\nfunction clamp(component) {\r\n\treturn Math.max(Math.min(255, component), 0);\r\n}\r\n\r\nfunction colorDistance(scale, dest, src) {\r\n\t// returns a red, blue or green value for the 'sepia' pixel\r\n\t// which is a weighted average of the original value and the calculated value\r\n\treturn clamp(scale * dest + (1 - scale) * src);\r\n};\r\n\r\nfunction processBW(binaryData, l) {\r\n\tfor (var i = 0; i < l; i += 4) {\r\n\t\tvar r = binaryData[i];\r\n\t\tvar g = binaryData[i + 1];\r\n\t\tvar b = binaryData[i + 2];\r\n\t\tvar luminance = r * 0.21 + g * 0.71 + b * 0.07;\r\n\t\tbinaryData[i] = luminance;\r\n\t\tbinaryData[i + 1] = luminance;\r\n\t\tbinaryData[i + 2] = luminance;\r\n\t}\r\n};\r\n\r\nfunction processSepia(binaryData, l) {\r\n\tfor (var i = 0; i < l; i += 4) {\r\n\t\tvar r = binaryData[i];\r\n\t\tvar g = binaryData[i + 1];\r\n\t\tvar b = binaryData[i + 2];\r\n\r\n\t\tbinaryData[i] = colorDistance(noise(), (r * 0.393) + (g * 0.769) + (b * 0.189), r);\r\n\t\tbinaryData[i + 1] = colorDistance(noise(), (r * 0.349) + (g * 0.686) + (b * 0.168), g);\r\n\t\tbinaryData[i + 2] = colorDistance(noise(), (r * 0.272) + (g * 0.534) + (b * 0.131), b);\r\n\t}\r\n};\r\n\r\nexports.processBW = processBW;\r\nexports.processSepia = processSepia;"]}